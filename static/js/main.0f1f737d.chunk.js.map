{"version":3,"sources":["assets/img/svg/click.svg","assets/img/svg/drag.svg","flux/constants.js","flux/dispatcher.js","flux/store.js","flux/actions.js","components/Navbars/ExamplesNavbar.js","components/Gallery.js","components/FIlterSlider.js","views/examples/LandingPage.js","components/Genres.js","views/examples/WriteUp.js","index.js"],"names":["module","exports","CHANGE","TOGGLE_FILTER","UPDATE_PAGENUM","RESET","UPDATE_ORDER","GET_DETAILED_RESOURCES","GET_DETAILED_RESOURCES_RESPONSE","ADD_TEMPLATE","GET_TEMPLATES","GET_TEMPLATES_RESPONSE","ADD_POLICY","GET_POLICIES","GET_POLICIES_RESPONSE","GET_OVERVIEW","GET_OVERVIEW_RESPONSE","UPDATE_SLIDERS","GET_VMS","GET_VMS_RESPONSE","GET_HOST_STATS","GET_HOST_STATS_RESPONSE","GET_USER_DETAILS","GET_USER_DETAILS_RESPONSE","AppDispatcher","Dispatcher","handleViewAction","action","this","dispatch","source","_store","filter","sliderValue","start","end","maxPoster","sortOrder","toggleFilter","bind","updateSliders","updatePageNum","reset","updateOrder","register","registerActions","actionType","Constants","data","updateUser","response","updateTemplates","addPolicy","updatePolicies","updateOverview","callback","on","removeListener","emit","overview","user","templates","map","item","idx","push","policies","menuVisible","resourceIndex","EventEmitter","ADD_RESOURCE","PagesNavbar","props","changeColor","document","documentElement","scrollTop","body","setState","color","toggleCollapse","classList","toggle","collapseOpen","state","onCollapseExiting","collapseOut","onCollapseExited","window","addEventListener","removeEventListener","Navbar","className","color-on-scroll","expand","Container","NavbarBrand","to","id","tag","Link","aria-expanded","onClick","Collapse","navbar","isOpen","onExiting","onExited","Row","Col","xs","href","e","preventDefault","Nav","NavItem","NavLink","React","Component","Gallery","getData","Promise","resolve","reject","d3","src","then","catch","error","drawPath","keys","Object","FIELDS","poster","title","year","score","gross","category","Store","getFilterIndex","order","getSortOrder","bounds","getSliderValue","filteredData","k","sort","f","reverse","Number","replace","width","height","numRects","parseInt","pageNum","result","scaler","imgs","slice","forEach","img","info","encodeURI","JSON","stringify","image","path","ReactTooltip","rebuild","console","log","getNumPages","onChange","addChangeListener","removeChangeListener","dangerouslySetInnerHTML","__html","getContent","dataTip","parse","decodeURI","formatter","Intl","NumberFormat","minimumFractionDigits","format","FIlterSlider","reloadData","drawOrdinal","drawContinusous","parseDate","dateString","groupByYear","key","d","sortKeys","rollup","v","length","entries","margin","xScale","range","domain","padding","ymin","value","ymax","yScale","vals","Actions","refs","slider1","noUiSlider","updateOptions","step","min","max","wNumb","decimals","bars","bandwidth","res","thresholds","bins","histogram","steps","x1","x0","thousand","prefix","filterIndex","func","setClick","Slider","create","connect","tooltips","val","ref","LandingPage","handleRadio","event","target","updateFilter","handleReset","resetFilters","toggle1","toggle2","handlePageNum","updatePageNums","handleToggle","name","innerHTML","filterHeight","filterWidth","numPages","resetDimensions","visContainer","filterContainer","clientWidth","clientHeight","ExamplesNavbar","style","fontSize","justifyContent","FormGroup","check","Label","Input","defaultValue","type","checked","disabled","require","click","WriteUp","lg","md","Card","CardHeader","CardBody","ReactDOM","render","getElementById","history","createBrowserHistory","basename","process"],"mappings":"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","file":"static/js/main.0f1f737d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.c29888b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/drag.9af81ed8.svg\";","export default {\n    CHANGE: \"CHANGE\",\n    TOGGLE_FILTER: \"TOGGLE_FILTER\",\n    UPDATE_PAGENUM: \"UPDATE_PAGENUM\",\n    RESET: \"RESET\",\n    UPDATE_ORDER: \"UPDATE_ORDER\",\n    GET_DETAILED_RESOURCES: \"GET_DETAILED_RESOURCES\",\n    GET_DETAILED_RESOURCES_RESPONSE: \"GET_DETAILED_RESOURCES_RESPONSE\",\n    ADD_TEMPLATE: \"ADD_TEMPLATE\",\n    GET_TEMPLATES: \"GET_TEMPLATES\",\n    GET_TEMPLATES_RESPONSE: \"GET_TEMPLATES_RESPONSE\",\n    ADD_POLICY: \"ADD_POLICY\",\n    GET_POLICIES: \"GET_POLICIES\",\n    GET_POLICIES_RESPONSE: \"GET_POLICIES_RESPONSE\",\n    GET_OVERVIEW: \"GET_OVERVIEW\",\n    GET_OVERVIEW_RESPONSE: \"GET_OVERVIEW_RESPONSE\",\n    UPDATE_SLIDERS: \"UPDATE_SLIDERS\",\n    GET_VMS: \"GET_VMS\",\n    GET_VMS_RESPONSE: \"GET_VMS_RESPONSE\",\n    GET_HOST_STATS: \"GET_HOST_STATS\",\n    GET_HOST_STATS_RESPONSE: \"GET_HOST_STATS_RESPONSE\",\n    GET_USER_DETAILS: \"GET_USER_DETAILS\",\n    GET_USER_DETAILS_RESPONSE: \"GET_USER_DETAILS_RESPONSE\",\n};\n","import {Dispatcher} from \"flux\";\n\nvar AppDispatcher = new Dispatcher();\n\nAppDispatcher.handleViewAction = function (action) {\n    this.dispatch({\n        source: 'VIEW_ACTION',\n        action: action\n    });\n};\n\nexport default AppDispatcher;","import Constants from \"./constants\";\nimport AppDispatcher from \"./dispatcher\";\nimport {EventEmitter} from \"events\";\n\nlet _store = {\n    filter: \"0\",\n    sliderValue: {start: 0, end: 0},\n    maxPoster: 100,\n    sortOrder: 0,\n};\n\nclass Store extends EventEmitter {\n    constructor() {\n        super();\n\n        this.toggleFilter = this.toggleFilter.bind(this);\n        this.updateSliders = this.updateSliders.bind(this);\n        this.updatePageNum = this.updatePageNum.bind(this);\n        this.reset = this.reset.bind(this);\n        this.updateOrder = this.updateOrder.bind(this);\n        AppDispatcher.register(this.registerActions.bind(this));\n    }\n\n    registerActions({action}) {\n        switch (action.actionType) {\n            case Constants.TOGGLE_FILTER:\n                this.toggleFilter(action.data);\n                break;\n            case Constants.UPDATE_SLIDERS:\n                this.updateSliders(action.data);\n                break;\n            case Constants.UPDATE_PAGENUM:\n                this.updatePageNum(action.data);\n                break;\n            case Constants.UPDATE_ORDER:\n                this.updateOrder(action.data);\n                break;\n            case Constants.RESET:\n                this.reset();\n                break;\n            case Constants.GET_USER_DETAILS_RESPONSE:\n                this.updateUser(action.response);\n                break;\n            case Constants.GET_TEMPLATES_RESPONSE:\n                this.updateTemplates(action.response);\n                break;\n            case Constants.ADD_POLICY:\n                this.addPolicy(action.data);\n                break;\n            case Constants.GET_POLICIES_RESPONSE:\n                this.updatePolicies(action.response);\n                break;\n            case Constants.GET_OVERVIEW_RESPONSE:\n                this.updateOverview(action.response);\n                break;\n            default:\n                return true;\n        }\n    }\n\n    addChangeListener(callback) {\n        this.on(Constants.CHANGE, callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener(Constants.CHANGE, callback);\n    }\n\n    toggleFilter(data) {\n        _store.filter = data;\n        this.emit(Constants.CHANGE);\n    }\n\n    updateSliders(data) {\n        _store.sliderValue = data;\n        this.emit(Constants.CHANGE);\n    }\n\n    updatePageNum(data) {\n        _store.maxPoster = data;\n        this.emit(Constants.CHANGE);\n    }\n\n    reset() {\n        _store = {\n            filter: \"0\",\n            sliderValue: {start: 0, end: 0},\n            maxPoster: 100,\n            sortOrder: 0,\n        };\n        this.emit(Constants.CHANGE);\n    }\n\n    updateOrder(data) {\n        _store.sortOrder = data;\n        this.emit(Constants.CHANGE);\n    }\n\n    updateOverview(data) {\n        _store.overview = data;\n        this.emit(Constants.CHANGE);\n    }\n\n    updateUser(data) {\n        _store.user = data;\n        this.emit(Constants.CHANGE);\n    }\n\n\n    updateTemplates(data) {\n        _store.templates = [];\n        data.map((item, idx) => {\n            _store.templates.push(item);\n        });\n        this.emit(Constants.CHANGE);\n    }\n\n\n    updatePolicies(data) {\n        _store.policies = [];\n        data.map((item, idx) => {\n            _store.policies.push(item);\n        });\n        this.emit(Constants.CHANGE);\n    }\n\n    toggleSidebar() {\n        _store.menuVisible = !_store.menuVisible;\n        this.emit(Constants.CHANGE);\n    }\n\n    switchResourceIndex(data) {\n        _store.resourceIndex = data;\n        this.emit(Constants.CHANGE);\n    }\n\n    getFilterIndex() {\n        return _store.filter\n    }\n\n    getSliderValue() {\n        return _store.sliderValue\n    }\n\n    getNumPages() {\n        return _store.maxPoster\n    }\n\n    getSortOrder() {\n        return _store.sortOrder;\n    }\n\n}\n\nexport default new Store();\n","import Constants from \"./constants\";\nimport AppDispatcher from \"./dispatcher\";\n\n\nclass Actions {\n    addResource(data) {\n        AppDispatcher.handleViewAction({\n            actionType: Constants.ADD_RESOURCE,\n            data: data\n        });\n    }\n\n    addTemplate(data) {\n        AppDispatcher.handleViewAction({\n            actionType: Constants.ADD_TEMPLATE,\n            data: data\n        });\n    }\n\n    addPolicy(data) {\n        AppDispatcher.handleViewAction({\n            actionType: Constants.ADD_POLICY,\n            data: data\n        });\n    }\n\n    toggleFilter(data) {\n        AppDispatcher.handleViewAction({\n            actionType: Constants.TOGGLE_FILTER,\n            data: data\n        });\n    }\n\n    updateSliders(data) {\n        AppDispatcher.handleViewAction({\n            actionType: Constants.UPDATE_SLIDERS,\n            data: data\n        });\n    }\n\n    updatePageNums(data) {\n        AppDispatcher.handleViewAction({\n            actionType: Constants.UPDATE_PAGENUM,\n            data: data\n        });\n    }\n\n    updateOrder(data) {\n        AppDispatcher.handleViewAction({\n            actionType: Constants.UPDATE_ORDER,\n            data: data\n        });\n    }\n\n    resetFilters() {\n        AppDispatcher.handleViewAction({\n            actionType: Constants.RESET,\n        });\n    }\n\n\n}\n\n\nexport default new Actions();","/*!\n\n=========================================================\n* BLK Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nclass PagesNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.changeColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.changeColor);\n  }\n  changeColor = () => {\n    if (\n      document.documentElement.scrollTop > 99 ||\n      document.body.scrollTop > 99\n    ) {\n      this.setState({\n        color: \"bg-info\"\n      });\n    } else if (\n      document.documentElement.scrollTop < 100 ||\n      document.body.scrollTop < 100\n    ) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  toggleCollapse = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  onCollapseExiting = () => {\n    this.setState({\n      collapseOut: \"collapsing-out\"\n    });\n  };\n  onCollapseExited = () => {\n    this.setState({\n      collapseOut: \"\"\n    });\n  };\n  render() {\n    return (\n      <Navbar\n        className={\"fixed-top \" + this.state.color}\n        color-on-scroll=\"100\"\n        expand=\"lg\"\n      >\n        <Container>\n          <div className=\"navbar-translate\">\n            <NavbarBrand\n              to=\"/\"\n              id=\"navbar-brand\"\n              tag={Link}\n            >\n              <span>A4• </span>\n              Movie Interaction Tool\n            </NavbarBrand>\n            <button\n              aria-expanded={this.state.collapseOpen}\n              className=\"navbar-toggler navbar-toggler\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar bar1\" />\n              <span className=\"navbar-toggler-bar bar2\" />\n              <span className=\"navbar-toggler-bar bar3\" />\n            </button>\n          </div>\n          <Collapse\n            className={\"justify-content-end \" + this.state.collapseOut}\n            navbar\n            isOpen={this.state.collapseOpen}\n            onExiting={this.onCollapseExiting}\n            onExited={this.onCollapseExited}\n          >\n            <div className=\"navbar-collapse-header\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                    A4• Movie Interaction Tool\n                  </a>\n                </Col>\n                <Col className=\"collapse-close text-right\" xs=\"6\">\n                  <button\n                    aria-expanded={this.state.collapseOpen}\n                    className=\"navbar-toggler\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <i className=\"tim-icons icon-simple-remove\" />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Nav navbar>\n              {/*<NavItem className=\"p-0\">*/}\n              {/*  <NavLink*/}\n              {/*    data-placement=\"bottom\"*/}\n              {/*    href=\"https://twitter.com/CreativeTim\"*/}\n              {/*    rel=\"noopener noreferrer\"*/}\n              {/*    target=\"_blank\"*/}\n              {/*    title=\"Follow us on Twitter\"*/}\n              {/*  >*/}\n              {/*    <i className=\"fab fa-twitter\" />*/}\n              {/*    <p className=\"d-lg-none d-xl-none\">Twitter</p>*/}\n              {/*  </NavLink>*/}\n              {/*</NavItem>*/}\n              {/*<NavItem className=\"p-0\">*/}\n              {/*  <NavLink*/}\n              {/*    data-placement=\"bottom\"*/}\n              {/*    href=\"https://www.facebook.com/CreativeTim\"*/}\n              {/*    rel=\"noopener noreferrer\"*/}\n              {/*    target=\"_blank\"*/}\n              {/*    title=\"Like us on Facebook\"*/}\n              {/*  >*/}\n              {/*    <i className=\"fab fa-facebook-square\" />*/}\n              {/*    <p className=\"d-lg-none d-xl-none\">Facebook</p>*/}\n              {/*  </NavLink>*/}\n              {/*</NavItem>*/}\n              {/*<NavItem className=\"p-0\">*/}\n              {/*  <NavLink*/}\n              {/*    data-placement=\"bottom\"*/}\n              {/*    href=\"https://www.instagram.com/CreativeTimOfficial\"*/}\n              {/*    rel=\"noopener noreferrer\"*/}\n              {/*    target=\"_blank\"*/}\n              {/*    title=\"Follow us on Instagram\"*/}\n              {/*  >*/}\n              {/*    <i className=\"fab fa-instagram\" />*/}\n              {/*    <p className=\"d-lg-none d-xl-none\">Instagram</p>*/}\n              {/*  </NavLink>*/}\n              {/*</NavItem>*/}\n              {/*<NavItem>*/}\n              {/*  <Button*/}\n              {/*    className=\"nav-link d-none d-lg-block\"*/}\n              {/*    color=\"primary\"*/}\n              {/*    target=\"_blank\"*/}\n              {/*    href=\"https://www.creative-tim.com/product/blk-design-system-pro-react?ref=bdsr-examples-navbar-upgrade-pro\"*/}\n              {/*  >*/}\n              {/*    <i className=\"tim-icons icon-spaceship\" /> Upgrade to PRO*/}\n              {/*  </Button>*/}\n              {/*</NavItem>*/}\n              <NavItem>\n                <NavLink tag={Link} to=\"/\">\n                  Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink tag={Link} to=\"/writeup\">\n                  Write-Up\n                </NavLink>\n              </NavItem>\n              {/*<NavItem>*/}\n              {/*  <NavLink href=\"https://github.com/creativetimofficial/blk-design-system-react/issues\">*/}\n              {/*    Have an issue?*/}\n              {/*  </NavLink>*/}\n              {/*</NavItem>*/}\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default PagesNavbar;\n","import React from \"react\";\n// reactstrap components\nimport {\n    Button,\n    Collapse,\n    NavbarBrand,\n    Navbar,\n    NavItem,\n    NavLink,\n    Nav,\n    Container,\n    Row,\n    Col,\n    UncontrolledTooltip\n} from \"reactstrap\";\n\nimport * as d3 from \"d3\";\nimport * as scaler from 'rect-scaler';\nimport ReactTooltip from 'react-tooltip';\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport worker from '../workers/image-worker'\nimport WebWorker from \"../workers/webWorker\";\nimport Store from \"../flux/store\";\nimport {Actions} from \"../flux\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pageNum: Store.getNumPages(),\n            path: \"\"\n        };\n\n        this.drawPath = this.drawPath.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentWillMount() {\n        Store.addChangeListener(this.onChange);\n    }\n\n    componentDidMount() {\n        this.drawPath();\n        window.addEventListener('resize', this.drawPath);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.drawPath);\n        Store.removeChangeListener(this.onChange);\n    }\n\n    onChange() {\n        this.setState({\n            ...this.state,\n            pageNum: Store.getNumPages(),\n        });\n        this.drawPath();\n    }\n\n    getData = () => {\n        // fetch data from the server\n        // and transform into CSV format\n        return new Promise((resolve, reject) => {\n            d3.csv(this.props.src)\n                .then(data => resolve(data))\n                .catch(error => reject(error));\n        });\n    };\n\n\n    drawPath = () => {\n\n        this.getData()\n            .then(data => { // renders the data table\n                const keys = Object.keys(data[0]);\n                const FIELDS = {\n                    GROSS: 8, GENRES: 9, TITLES: 11, YEAR: 23, SCORE: 25, LIKES: 27, POSTERS: 28\n                };\n\n                const poster = keys[FIELDS.POSTERS];\n                const title = keys[FIELDS.TITLES];\n                const year = keys[FIELDS.YEAR];\n                const score = keys[FIELDS.SCORE];\n                const gross = keys[FIELDS.GROSS];\n\n                const category = (Store.getFilterIndex() === \"0\") ? year : gross;\n                const order = Store.getSortOrder() === 0;\n                let bounds = Store.getSliderValue();\n\n                let filteredData = data\n                    .filter(k => k[poster] !== \"\" && k[gross] !== \"\" && k[year] !== \"\")\n                    .sort((e, f) => e[category] - f[category]);\n\n                if (!order) {\n                    filteredData = filteredData.reverse();\n                }\n\n                if (typeof bounds.start !== \"number\"){\n                    bounds.start = Number(bounds.start.replace(/[^0-9.-]+/g, \"\"));\n                    bounds.end = Number(bounds.end.replace(/[^0-9.-]+/g, \"\"));\n                }\n\n                filteredData = filteredData\n                    .filter(k => k[category] > bounds.start && k[category] < bounds.end);\n\n\n                // set the dimensions and margins of the graph\n                const margin = 5;\n                const padding = 9;\n                let {width, height} = this.props;\n                width -= (2 * padding);\n                height -= (2 * padding);\n\n                height -= 140;\n\n                const numRects = parseInt(this.state.pageNum);\n                const rectWidth = 1;\n                const rectHeight = 1.467;\n                const result = scaler.largestRect(width, height, numRects, rectWidth, rectHeight);\n\n                let imgs = ``;\n                filteredData.slice(0, numRects).forEach(img => {\n                    let info = encodeURI(JSON.stringify({\n                        image: img[poster],\n                        year: img[year],\n                        title: img[title],\n                        score: img[score]\n                    }));\n                    imgs += `<img src=\"${img[poster]}\" width=${result.width} height=${result.height} data-for=\"posterTooltip\" data-tip=${info} loading=\"lazy\" style=\"padding: ${margin}px\">`;\n                });\n                // let res = `<g class=\"bars\" transform=\"translate(${margin.left + 20},${margin.top})\">${bars}</g>`;\n\n                this.setState({\n                    ...this.state,\n                    path: imgs//res\n                });\n                ReactTooltip.rebuild();\n            })\n            .catch(e => console.log(e));\n    };\n\n    render() {\n        return (\n            <>\n                <div\n                    className=\"vis-container\"\n                    // style={{width: `${this.props.width}`, height: `${this.props.height}`}}\n                    dangerouslySetInnerHTML={{__html: this.state.path}}\n                >\n                </div>\n                <ReactTooltip\n                    id=\"posterTooltip\"\n                    getContent={(dataTip) => {\n                        const data = JSON.parse(decodeURI(dataTip));\n                        if (data === null)\n                            return;\n                        const {image, title, score, year} = data;\n                        let formatter = new Intl.NumberFormat('en', {minimumFractionDigits: 0});\n                        return (<div>\n                            <img src={image} height=\"180\"/>\n                            <p className=\"m-2 font-weight-bold\"><strong>{title}</strong></p>\n                            <p>Score: {score} Year: {formatter.format(year).replace(/,\\s?/g, \"\")}</p>\n                        </div>)\n                    }\n                    }\n                />\n            </>\n        );\n    }\n}\n\nexport default Gallery;\n","import React from \"react\";\n// reactstrap components\nimport {\n    Button,\n    Collapse,\n    NavbarBrand,\n    Navbar,\n    NavItem,\n    NavLink,\n    Nav,\n    Container,\n    Row,\n    Col,\n    UncontrolledTooltip\n} from \"reactstrap\";\nimport Store from \"../flux/store\";\nimport {Actions} from \"../flux\";\n\nimport * as d3 from \"d3\"\nimport Slider from \"nouislider\";\nimport wNumb from \"wnumb\";\n\nclass FIlterSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            path: \"\",\n            filterIndex: Store.getFilterIndex(),\n            sliderValue: Store.getSliderValue(),\n        };\n\n        this.drawOrdinal = this.drawOrdinal.bind(this);\n        this.drawContinusous = this.drawContinusous.bind(this);\n        this.reloadData = this.reloadData.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        const type = this.state.filterIndex;\n        let func = (type === \"0\") ? this.drawOrdinal() : this.drawContinusous();\n        window.addEventListener('resize', func);\n\n        this.props.setClick(this.reloadData);\n\n        var slider1 = this.refs.slider1;\n        Slider.create(slider1, {\n            start: [this.state.sliderValue.start, this.state.sliderValue.end],\n            connect: [false, true, false],\n            tooltips: true,\n            format: wNumb({\n                decimals: 0\n            }),\n            step: 1,\n            range: {min: 0, max: 100}\n        });\n\n        slider1.noUiSlider.on('change', (e) => {\n            let val = {start: e[0], end: e[1]};\n            Actions.updateSliders(val);\n        });\n\n    }\n\n    componentWillMount() {\n        Store.addChangeListener(this.onChange);\n    }\n\n    componentWillUnmount() {\n        const type = this.state.filterIndex;\n        let func = (type === \"0\") ? this.drawOrdinal() : this.drawContinusous();\n        window.removeEventListener('resize', func);\n        Store.removeChangeListener(this.onChange);\n    }\n\n    onChange() {\n        this.setState({\n            ...this.state,\n            filterIndex: Store.getFilterIndex(),\n            sliderValue: Store.getSliderValue(),\n        });\n        // this.reloadData()\n    }\n\n    reloadData = () => {\n        const type = Store.getFilterIndex();\n        (type === \"0\") ? this.drawOrdinal() : this.drawContinusous();\n    };\n\n    getData = () => {\n        // fetch data from the server\n        // and transform into CSV format\n        return new Promise((resolve, reject) => {\n            d3.csv(this.props.src)\n                .then(data => resolve(data))\n                .catch(error => reject(error));\n        });\n    };\n\n\n    drawOrdinal = () => {\n        var parseDate = (dateString) => {\n            var parseDate = d3.timeParse(\"%Y\");\n            var numFormat = new Intl.NumberFormat('en', {minimumFractionDigits: 0});\n            return parseDate(numFormat.format(dateString).replace(/,\\s?/g, \"\"));\n        };\n\n        this.getData()\n            .then(data => { // renders the data table\n                const keys = Object.keys(data[0]);\n                const FIELDS = {\n                    GROSS: 8, GENRES: 9, TITLES: 11, YEAR: 23, SCORE: 25, LIKES: 27, POSTERS: 28\n                };\n                const year = keys[FIELDS.YEAR];\n\n                var groupByYear = d3.nest()\n                    .key(function (d) {\n                        return d[year];\n                    }).sortKeys(d3.ascending)\n                    .rollup(function (v) {\n                        return v.length;\n                    })\n                    .entries(data)\n                    .filter(k => k.key !== \"\");\n\n                // set the dimensions and margins of the graph\n                const margin = {top: 15, bottom: 15, left: -14, right: 18};\n                let {width, height} = this.props;\n                width -= (margin.left + margin.right);\n                height -= (margin.top + margin.bottom);\n                //X axis\n                var xScale = d3.scaleBand()\n                    .range([0, width])\n                    .domain(groupByYear.map(function (d) {\n                        return parseDate(d.key);\n                    }))\n                    .padding(0.2);\n\n                const ymin = d3.min(groupByYear.map(d => d.value));\n                const ymax = d3.max(groupByYear.map(d => d.value));\n                // Add Y axis\n                var yScale = d3.scaleLinear()\n                    .domain([\n                        ymin, ymax\n                    ])\n                    .range([height, 0]);\n\n                const vals = {\n                    start: d3.min(groupByYear.map(d => d.key)),\n                    end: d3.max(groupByYear.map(d => d.key))\n                };\n\n                Actions.updateSliders(vals);\n\n                let slider = this.refs.slider1;\n                slider.noUiSlider.updateOptions({\n                    start: [Store.getSliderValue().start, Store.getSliderValue().end],\n                    step: 1,\n                    range: {min: parseInt(Store.getSliderValue().start), max: parseInt(Store.getSliderValue().end)},\n                    format: wNumb({\n                        decimals: 0,\n                    }),\n                });\n\n                let bars = ``;\n                groupByYear.forEach((item) => {\n                    bars += `<rect x=\"${xScale(parseDate(item.key))}\" y=\"${yScale(item.value)}\" width=\"${xScale.bandwidth()}\" height=\"${height - yScale(item.value)}\" fill=\"#b30019\"/>`\n                });\n                let res = `<g class=\"bars\" transform=\"translate(${margin.left + 20},${margin.top})\">${bars}</g>`;\n\n                this.setState({\n                    path: res\n                });\n            })\n            .catch(e => console.log(e));\n    };\n\n    drawContinusous = () => {\n        this.getData()\n            .then(data => { // renders the data table\n                    const keys = Object.keys(data[0]);\n                    const FIELDS = {\n                        GROSS: 8, GENRES: 9, TITLES: 11, YEAR: 23, SCORE: 25, LIKES: 27, POSTERS: 28\n                    };\n\n                    const gross = keys[FIELDS.GROSS];\n                    let filteredData = data\n                        .filter(k => k[gross] !== \"\").map(d => {\n                            return {\n                                ...d,\n                                gross: parseInt(d[gross])\n                            }\n                        })\n                        .sort((e, f) => e[gross] - f[gross]);\n\n                    // set the dimensions and margins of the graph\n                    const margin = {top: 15, bottom: 15, left: -12, right: 18};\n                    let {width, height} = this.props;\n                    width -= (margin.left + margin.right);\n                    height -= (margin.top + margin.bottom);\n                    //X axis\n                    var xScale = d3.scaleLinear()\n                        .range([0, width])\n                        .domain([\n                            d3.min(filteredData.map(d => d[gross])),\n                            d3.max(filteredData.map(d => d[gross]))\n                        ]);\n\n                    // // Add Y axis\n                    var yScale = d3.scaleLinear()\n                        .range([height, 0]);\n\n                    const min = d3.min(filteredData.map(d => d[gross]));\n                    const max = d3.max(filteredData.map(d => d[gross]));\n                    const thresholds = d3.range(min, max, (max - min) / 100);\n\n                    // set the parameters for the histogram\n                    var histogram = d3.histogram()\n                        .value(d => d[gross])\n                        .domain(xScale.domain())  // then the domain of the graphic\n                        .thresholds(thresholds);\n                    // .thresholds(xScale.ticks(100)); // then the numbers of bins\n\n                    // And apply this function to data to get the bins\n                    var bins = histogram(filteredData);\n                    // Y axis: update now that we know the domain\n                    yScale.domain([0, d3.max(bins, d => d.length)]);   // d3.hist has to be called before the Y axis obviously\n\n                    const steps = bins[0].x1 - bins[0].x0;\n\n                    const vals = {\n                        start: bins[0].x0,\n                        end: bins[bins.length - 1].x1,\n                    };\n\n                    Actions.updateSliders(vals);\n\n                    let slider = this.refs.slider1;\n                    slider.noUiSlider.updateOptions({\n                        start: [Store.getSliderValue().start, Store.getSliderValue().end],\n                        step: steps,\n                        range: {min: parseInt(Store.getSliderValue().start), max: parseInt(Store.getSliderValue().end)},\n                        format: wNumb({\n                            decimals: 0,\n                            thousand: ',',\n                            prefix: '$ ',\n                        }),\n                    });\n\n                    let bars = ``;\n                    bins.forEach((item) => {\n                        bars += `<rect x=\"0\" transform=\"translate(${xScale(item.x0)}, ${yScale(item.length)})\" width=\"${xScale(item.x1) - xScale(item.x0)}\" height=\"${height - yScale(item.length)}\" fill=\"#b30019\"/>`\n                    });\n                    let res = `<g class=\"bars\" transform=\"translate(${margin.left + 20},${margin.top})\">${bars}</g>`;\n\n                    this.setState({\n                        path: res\n                    });\n                }\n            )\n            .catch(e => console.log(e));\n    };\n\n    render() {\n        return (\n            <>\n                <div className=\"filter-slider\" ref=\"slider1\"/>\n                <svg\n                    className=\"filter-container\"\n                    width={this.props.width}\n                    height={this.props.height}\n                    dangerouslySetInnerHTML={{__html: this.state.path}}\n                >\n                </svg>\n            </>\n        );\n    }\n}\n\nexport default FIlterSlider;\n","import React from \"react\";\n// reactstrap components\nimport {\n    FormGroup, Label, Input,\n} from \"reactstrap\";\n\nimport Store from \"../../flux/store\";\nimport {Actions} from \"../../flux\";\n\n\n// core components\nimport ExamplesNavbar from \"../../components/Navbars/ExamplesNavbar.js\";\nimport Gallery from \"../../components/Gallery\";\nimport FIlterSlider from \"../../components/FIlterSlider\";\nimport ReactTooltip from 'react-tooltip';\nimport Genres from \"../../components/Genres\";\n\n// import FIlterSlider from \"../../components/FIlterSlider\";\n\nclass LandingPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 0, width: 0,\n            filterHeight: 0, filterWidth: 0,\n            filterIndex: Store.getFilterIndex(),\n            numPages: Store.getNumPages(),\n            toggle1: \"active\",\n            toggle2: \"\",\n        };\n\n        this.resetDimensions = this.resetDimensions.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentWillMount() {\n        Store.addChangeListener(this.onChange);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resetDimensions);\n        this.resetDimensions();\n\n        document.body.classList.toggle(\"landing-page\");\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resetDimensions);\n        Store.removeChangeListener(this.onChange);\n        document.body.classList.toggle(\"landing-page\");\n    }\n\n    onChange() {\n        this.setState({\n            ...this.state,\n            filterIndex: Store.getFilterIndex(),\n            numPages: Store.getNumPages(),\n        });\n    }\n\n    resetDimensions() {\n        var visContainer = this.refs.visContainer;\n        var filterContainer = this.refs.filterContainer;\n\n        this.setState({\n                width: visContainer.clientWidth, height: visContainer.clientHeight,\n                filterHeight: filterContainer.clientHeight, filterWidth: filterContainer.clientWidth\n            }\n        );\n    }\n\n    handleRadio = event => {\n        const value = event.target.value;\n        Actions.toggleFilter(value);\n        this.updateFilter();\n    };\n\n    handleReset = () => {\n        Actions.resetFilters();\n        this.updateFilter();\n        this.setState({\n            ...this.state,\n            toggle1: \"active\",\n            toggle2: \"\",\n        });\n    };\n\n    handlePageNum = event => {\n        const value = event.target.value;\n        Actions.updatePageNums(value);\n    };\n\n    handleToggle = event => {\n        const name = event.target.innerHTML;\n        let toggle1 = \"\", toggle2 = \"\";\n        if (name === \"ascending\") {\n            toggle1 = \"active\";\n            toggle2 = \"\";\n            Actions.updateOrder(0);\n        } else if (name === \"descending\") {\n            toggle2 = \"active\";\n            toggle1 = \"\";\n            Actions.updateOrder(1);\n        }\n        this.setState({\n            ...this.state,\n            toggle1: toggle1,\n            toggle2: toggle2,\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <ExamplesNavbar/>\n                <div className=\"wrapper\" style={{height: \"100vh\"}}>\n                    <div className=\"page-container\">\n                        <div className=\"page-filters\">\n                            <div className=\"filter-top\">\n                                <div className=\"filter-selection\">\n                                    <div className=\"section-title\">\n                                        <div className=\"right-info\">\n                                            <div className=\"title-box\">\n                                                <h2>Selection filter</h2>\n                                                <div className=\"subtitle-box\">\n                                                    <h3>Select category to filter (choose one radio button)</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"slider-box\">\n                                        <div className=\"d-flex mx-4\"\n                                             style={{fontSize: \"12px\", justifyContent: \"space-between\"}}>\n                                            <FormGroup check className=\"form-check-radio\">\n                                                <Label check>\n                                                    <Input\n                                                        defaultValue=\"0\"\n                                                        id=\"exampleRadios\"\n                                                        name=\"exampleRadios\"\n                                                        type=\"radio\"\n                                                        checked={this.state.filterIndex === \"0\"}\n                                                        onChange={this.handleRadio}\n                                                    />\n                                                    <span className=\"form-check-sign\"/>\n                                                    Year\n                                                </Label>\n                                            </FormGroup>\n                                            <FormGroup check className=\"form-check-radio\">\n                                                <Label check>\n                                                    <Input\n                                                        defaultValue=\"1\"\n                                                        id=\"exampleRadios1\"\n                                                        name=\"exampleRadios\"\n                                                        type=\"radio\"\n                                                        checked={this.state.filterIndex === \"1\"}\n                                                        onChange={this.handleRadio}\n                                                    />\n                                                    <span className=\"form-check-sign\"/>\n                                                    Gross (US$)\n                                                </Label>\n                                            </FormGroup>\n                                            <FormGroup check className=\"form-check-radio\" disabled>\n                                                <Label check>\n                                                    <Input\n                                                        defaultValue=\"2\"\n                                                        id=\"exampleRadios2\"\n                                                        name=\"exampleRadios\"\n                                                        type=\"radio\"\n                                                        checked={this.state.filterIndex === \"2\"}\n                                                        onChange={this.handleRadio}\n                                                        disabled\n                                                    />\n                                                    <span className=\"form-check-sign\"/>\n                                                    IMDB Score\n                                                </Label>\n                                            </FormGroup>\n                                            <FormGroup check className=\"form-check-radio\" disabled>\n                                                <Label check>\n                                                    <Input\n                                                        defaultValue=\"3\"\n                                                        id=\"exampleRadios3\"\n                                                        name=\"exampleRadios\"\n                                                        type=\"radio\"\n                                                        disabled\n                                                        checked={this.state.filterIndex === \"3\"}\n                                                        onChange={this.handleRadio}\n                                                    />\n                                                    <span className=\"form-check-sign\"/>\n                                                    Facebook Likes\n                                                </Label>\n                                            </FormGroup>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"filter-selection\">\n                                    <div className=\"section-title\">\n                                        <div className=\"right-info\">\n                                            <div className=\"title-box\">\n                                                <h2>Selection slider</h2>\n                                                <div className=\"subtitle-box\">\n                                                    <h3>Movies per selected category(</h3>\n                                                    <img src={require(\"../../assets/img/svg/drag.svg\")}\n                                                         className=\"drag-icon\"/>\n                                                    <h3>drag to select interval)</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"slider-box\" ref=\"filterContainer\">\n                                        <FIlterSlider height={this.state.filterHeight}\n                                                      width={this.state.filterWidth}\n                                                      setClick={click => this.updateFilter = click}\n                                                      src=\"http://localhost:8080/movies.csv\"/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"filter-bottom\">\n                                <div className=\"left-info\">\n                                    <div className=\"option-view\">\n                                        <div className=\"selection-options\"><h3>Show</h3>\n                                            <FormGroup className=\"m-2\">\n                                                <Input\n                                                    value={this.state.numPages}\n                                                    id=\"pageNumber\"\n                                                    name=\"pageNumber\"\n                                                    type=\"range\"\n                                                    min=\"20\"\n                                                    max=\"100\"\n                                                    onChange={this.handlePageNum}\n                                                />\n\n                                            </FormGroup>\n                                            <h3><strong>{this.state.numPages}</strong> (min: 20, max: 100) pages in</h3>\n                                            <div className=\"switch-buttons\">\n                                                <button className={\"page-buttonview \" + this.state.toggle1} name=\"asc\"\n                                                        onClick={this.handleToggle}><h4>ascending</h4></button>\n                                                <button className={\"page-buttonview \" + this.state.toggle2} name=\"dsc\"\n                                                        onClick={this.handleToggle}><h4>descending</h4></button>\n                                            </div>\n                                            <h3>order</h3></div>\n                                    </div>\n                                    <button className=\"reset-all dbButton clickable\" onClick={this.handleReset}>\n                                        Reset Filters\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"page-main-content\">\n                            <div className=\"page-viz\" ref=\"visContainer\">\n                                <Gallery height={this.state.height} width={this.state.width}\n                                         src=\"http://localhost:8080/movies.csv\"/>\n                            </div>\n                            <div className=\"page-side-filters\">\n                                <div>\n                                    {/*<Genres/>*/}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default LandingPage;\n","import React from \"react\";\n// reactstrap components\nimport {\n    Button,\n    Collapse,\n    NavbarBrand,\n    Navbar,\n    NavItem,\n    NavLink,\n    Nav,\n    Container,\n    Row,\n    Col,\n    UncontrolledTooltip\n} from \"reactstrap\";\n\nimport * as d3 from \"d3\";\nimport * as scaler from 'rect-scaler';\nimport ReactTooltip from 'react-tooltip';\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport worker from '../workers/image-worker'\nimport WebWorker from \"../workers/webWorker\";\nimport Store from \"../flux/store\";\nimport {Actions} from \"../flux\";\n\nclass Genres extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pageNum: Store.getNumPages(),\n            path: \"\"\n        };\n\n        this.genres = [\"Comedy\", \"Crime\", \"Drama\", \"Romance\", \"Thriller\", \"Sci-Fi\", \"Action\", \"Animation\", \"Family\",\n            \"Biography\", \"Adventure\", \"Fantasy\", \"Horror\", \"Western\", \"Documentary\"\n        ];\n\n        this.drawPath = this.drawPath.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentWillMount() {\n        Store.addChangeListener(this.onChange);\n    }\n\n    componentDidMount() {\n        this.drawPath();\n        window.addEventListener('resize', this.drawPath);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.drawPath);\n        Store.removeChangeListener(this.onChange);\n    }\n\n    onChange() {\n        this.setState({\n            ...this.state,\n            pageNum: Store.getNumPages(),\n        });\n        this.drawPath();\n    }\n\n    getData = () => {\n        // fetch data from the server\n        // and transform into CSV format\n        return new Promise((resolve, reject) => {\n            d3.csv(this.props.src)\n                .then(data => resolve(data))\n                .catch(error => reject(error));\n        });\n    };\n\n\n    drawPath = () => {\n\n        this.getData()\n            .then(data => { // renders the data table\n                const keys = Object.keys(data[0]);\n                const FIELDS = {\n                    GROSS: 8, GENRES: 9, TITLES: 11, YEAR: 23, SCORE: 25, LIKES: 27, POSTERS: 28\n                };\n\n                const poster = keys[FIELDS.POSTERS];\n                const title = keys[FIELDS.TITLES];\n                const year = keys[FIELDS.YEAR];\n                const score = keys[FIELDS.SCORE];\n                const gross = keys[FIELDS.GROSS];\n\n                const category = (Store.getFilterIndex() === \"0\") ? year : gross;\n                const order = Store.getSortOrder() === 0;\n                let bounds = Store.getSliderValue();\n\n                let filteredData = data\n                    .filter(k => k[poster] !== \"\" && k[gross] !== \"\" && k[year] !== \"\")\n                    .sort((e, f) => e[category] - f[category]);\n\n                if (!order) {\n                    filteredData = filteredData.reverse();\n                }\n\n                if (typeof bounds.start !== \"number\") {\n                    bounds.start = Number(bounds.start.replace(/[^0-9.-]+/g, \"\"));\n                    bounds.end = Number(bounds.end.replace(/[^0-9.-]+/g, \"\"));\n                }\n\n                filteredData = filteredData\n                    .filter(k => k[category] > bounds.start && k[category] < bounds.end);\n\n\n                // set the dimensions and margins of the graph\n                const margin = 5;\n                const padding = 9;\n                let {width, height} = this.props;\n                width -= (2 * padding);\n                height -= (2 * padding);\n\n                height -= 140;\n\n                const numRects = parseInt(this.state.pageNum);\n                const rectWidth = 1;\n                const rectHeight = 1.467;\n                const result = scaler.largestRect(width, height, numRects, rectWidth, rectHeight);\n\n                let imgs = ``;\n                filteredData.slice(0, numRects).forEach(img => {\n                    let info = encodeURI(JSON.stringify({\n                        image: img[poster],\n                        year: img[year],\n                        title: img[title],\n                        score: img[score]\n                    }));\n                    imgs += `<img src=\"${img[poster]}\" width=${result.width} height=${result.height} data-for=\"posterTooltip\" data-tip=${info} loading=\"lazy\" style=\"padding: ${margin}px\">`;\n                });\n                // let res = `<g class=\"bars\" transform=\"translate(${margin.left + 20},${margin.top})\">${bars}</g>`;\n\n                this.setState({\n                    ...this.state,\n                    path: imgs//res\n                });\n                ReactTooltip.rebuild();\n            })\n            .catch(e => console.log(e));\n    };\n\n    render() {\n        return (\n            <>\n                <div className=\"\">\n                    <div className=\"section-title line\"><h2\n                    >Genres</h2>\n                        <div className=\"subtitle-box\">\n                            <img src={require(\"./../assets/img/svg/click.svg\")}\n                                 className=\"click-icon\"/>\n                            <h3>Click to select one or more genres</h3>\n                        </div>\n                    </div>\n                    <div className=\"macrocategories\">\n                        <button\n                            className=\"macro-button inactive\">\n                            <div className=\"macro-background\"></div>\n                            <div className=\"macro-bar\"\n                                 style={{\n                                     width: \"13%\",\n                                     background: \"rgb(89, 205, 144)\",\n                                     opacity: \"0.8\"\n                                 }}>\n                            </div>\n                            <div className=\"macro-labels\"><h3\n                            >Action</h3><h3\n                            >142 Occurrences</h3></div>\n                        </button>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Genres;\n","import React from \"react\";\nimport classnames from \"classnames\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    Label,\n    FormGroup,\n    Form,\n    Input,\n    FormText,\n    NavItem,\n    NavLink,\n    Nav,\n    Table,\n    TabContent,\n    TabPane,\n    Container,\n    Row,\n    Col,\n    UncontrolledTooltip,\n    UncontrolledCarousel\n} from \"reactstrap\";\n\n// core components\nimport ExamplesNavbar from \"../../components/Navbars/ExamplesNavbar.js\";\n\nclass WriteUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        document.body.classList.toggle(\"profile-page\");\n    }\n\n    componentWillUnmount() {\n        document.body.classList.toggle(\"profile-page\");\n    }\n\n    render() {\n        return (\n            <>\n                <ExamplesNavbar/>\n                <div className=\"wrapper\">\n                    <div className=\"writeup\">\n                        <Container className=\"align-items-center\">\n                            <h2>Movie Interaction Tool</h2>\n                            <p>\n                                The movie interactive tool was inspired by the need for movie watchers like myself to\n                                get a tool that is visually pleasing and gives the user freedom to mix and match filters\n                                to see what movies are available. An added feature of this tool is the inclusion of\n                                posters to stimulate the users when they hover over a movie. An additional question that\n                                might be investigated is how poster designs relate to gross and the year.\n\n                                The original data is taken from the <a\n                                href=\"https://www.kaggle.com/carolzhangdc/imdb-5000-movie-dataset\">\n                                Kaggle IMdb Movie Dataset\n                            </a> and the poster links are\n                                crawled from <a href=\"http://imdb.com/\">IMdb</a>.\n                            </p>\n                            <br/>\n                            <h3>Design Decision</h3>\n                            <Row>\n                                <Col className=\"\" lg=\"6\" md=\"6\">\n                                    <Card className=\"card-plain\">\n                                        <CardHeader>\n                                            <h4>Visual Encodings</h4>\n                                        </CardHeader>\n                                        <CardBody>\n                                            The visual encoding for the dataset lies across multi dimensions. The tool\n                                            provides a filter for year and gross and displays the distribution using a\n                                            bar chart to give the user an idea where the movies are concentrated.\n                                            <br/><br/>\n                                            The movies are displayed dynamically using posters sourced from IMdb to the\n                                            added data. Positional encoding across the area shows a sorted and filtered\n                                            list of the top 100 movies matching the set criteria. Users can use a filter\n                                            slider to set the year range and gross range of the movie while being able\n                                            to see the distribution of where the movie data is. The user can toggle\n                                            between gross and year which updates the screen instantly.\n                                            <br/><br/>\n                                            Posters were chosen because it is the most natural way users interact with\n                                            movies in a list. Bar charts were chosen to show distribution of movies over\n                                            the selected categories.\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                                <Col lg=\"6\" md=\"6\">\n                                    <Card className=\"card-plain\">\n                                        <CardHeader>\n                                            <h4>Alternative Designs</h4>\n                                        </CardHeader>\n                                        <CardBody>\n                                            Rather than use bar charts to show the data distribution, the year and gross\n                                            could have been drawn on one scatter plot to show how each dimension affects\n                                            the other to give the user a better view.<br/>\n                                            Using a scatter plot would need more estate to visualize properly and would\n                                            be unnatural to read at first. Also to include a filter slider based on\n                                            specific dimensions of the data, it was best to show the dimension\n                                            distributions separately rather as a bar chart. This gives the user\n                                            instantaneous information about the movie data.\n                                            <br/><br/>\n                                            Movies could have been organised by category as grouped bubbles based on an\n                                            ordinal category like genre rather than positional in an order. The same\n                                            bubbles could be made interactive to show posters when hovered on.<br/>\n                                            This choice of interaction would require a huge estate to visualize data\n                                            clearly as bubbles within the same category might be crowded. Also most\n                                            movies have more than one genre and it would be difficult to discriminate\n                                            which category to place them in. Repeated visuals will detract from the goal\n                                            of being able to search for a movie based on selected criteria.\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            <h3>Overview of Development Process</h3>\n                            <Row>\n                                <Col className=\"\" lg=\"6\" md=\"6\">\n                                    <Card className=\"card-plain\">\n                                        <CardBody>\n                                            <h4>Processing Data</h4>\n                                            The data sourced from Kaggle lacked the poster links, so a web scraper was\n                                            written in Python to find the posters from the page html given the IMdb\n                                            links in the original dataset. The poster links were appended as a column in\n                                            the csv data.\n                                            <h4 className=\"mt-4\">Web Page Development</h4>\n                                            The website is built using <strong>ReactJS</strong> with reactstrap as the\n                                            main library for\n                                            views. D3.js is the tool used to process the csv data and render the\n                                            visualizations.\n                                            <h4 className=\"mt-4\">Visualisation Development</h4>\n                                            Due to ReactJS's interaction with a Virtual DOM, a different\n                                            approach rather than using D3's DOM interaction was used. The SVG elements\n                                            were generated as strings using Javascript functions and injected into the\n                                            Virtual DOM on render changes.<br/><br/>\n                                            Each bar chart was drawn using svg rects and the data and scales processed\n                                            using D3. For the year distribution an Ordinal scale was used and a Linear\n                                            scale was used for the gross distribution. Most of the development time was\n                                            spent calibrating the sliders to fit and model the steps of change over the\n                                            underlying distribution visuals. Coordinated interaction between all the\n                                            visualizations and the selectors was facilitated with the use of flux which\n                                            allows data to be instantly sent to the needed components.\n                                            <br/><br/>\n                                            Overall development took about 34 hours over 3 days.\n                                            <h4 className=\"mt-4\">Future Development</h4>\n                                            Given extra time, the tool can incorporate genres as a side filter that\n                                            shows the distribution of data in matching the criteria. The genres could be\n                                            made buttons that highlight the movie posters that match the category and\n                                            dim the rest that do not match.\n                                            Most time was spent integrating D3 and React to display the visuals as well\n                                            as time spent crawling IMdb for the poster links.\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default WriteUp;\n","/*!\n\n=========================================================\n* BLK Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from 'history';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"./assets/css/nucleo-icons.css\";\nimport \"./assets/scss/blk-design-system-react.scss?v=1.1.0\";\nimport \"./assets/demo/demo.css\";\n\n// import Index from \"./views/Index.js\";\nimport LandingPage from \"./views/examples/LandingPage.js\";\n// import RegisterPage from \"./views/examples/RegisterPage.js\";\n// import ProfilePage from \"./views/examples/ProfilePage.js\";\nimport WriteUp from \"./views/examples/WriteUp\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/writeup\" render={props => <WriteUp {...props} />} />\n      <Route\n        path=\"/\"\n        render={props => <LandingPage {...props} />}\n      />\n      {/*<Route*/}\n      {/*  path=\"/write-up\"*/}\n      {/*  render={props => <WriteUp {...props} />}*/}\n      {/*/>*/}\n      {/*<Route*/}\n      {/*  path=\"/profile-page\"*/}\n      {/*  render={props => <ProfilePage {...props} />}*/}\n      {/*/>*/}\n      {/*<Redirect from=\"/\" to=\"/components\" />*/}\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nexport const history = createBrowserHistory({\n    basename: process.env.PUBLIC_URL\n});"],"sourceRoot":""}